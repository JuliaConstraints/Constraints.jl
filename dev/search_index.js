var documenterSearchIndex = {"docs":
[{"location":"library/#List-of-constraints","page":"Library","title":"List of constraints","text":"","category":"section"},{"location":"library/","page":"Library","title":"Library","text":"","category":"page"},{"location":"library/","page":"Library","title":"Library","text":"Modules = [Constraints]","category":"page"},{"location":"library/#Constraints._all_different","page":"Library","title":"Constraints._all_different","text":"_all_different\n\nGlobal constraint ensuring that all the values of a given configuration are unique.\n\n\n\n\n\n","category":"constant"},{"location":"library/#Constraints._all_equal","page":"Library","title":"Constraints._all_equal","text":"all_equal\n\nGlobal constraint ensuring that all the values of x are all equal.\n\n\n\n\n\n","category":"constant"},{"location":"library/#Constraints._all_equal_param","page":"Library","title":"Constraints._all_equal_param","text":"all_equal_param\n\nGlobal constraint ensuring that all the values of x are all equal to a given parameter param.\n\n\n\n\n\n","category":"constant"},{"location":"library/#Constraints._dist_different","page":"Library","title":"Constraints._dist_different","text":"dist_different\n\nLocal constraint ensuring that concept(dist_different, i, j, k, l) = |i - j| â‰  |k - l|).\n\n\n\n\n\n","category":"constant"},{"location":"library/#Constraints._eq","page":"Library","title":"Constraints._eq","text":"_eq\n\nEquality between two variables.\n\n\n\n\n\n","category":"constant"},{"location":"library/#Constraints._ordered","page":"Library","title":"Constraints._ordered","text":"ordered(x::Int...)\n\nGlobal constraint ensuring that all the values of x are ordered.\n\n\n\n\n\n","category":"constant"},{"location":"library/#Constraints.usual_constraints","page":"Library","title":"Constraints.usual_constraints","text":"usual_constraints::Dict\n\nDictionary that contains all the usual constraints defined in Constraint.jl. \n\n\n\n\n\n","category":"constant"},{"location":"library/#Constraints.Constraint","page":"Library","title":"Constraints.Constraint","text":"Constraint\n\nParametric stucture with the following fields.\n\nconcept: a Boolean function that, given an assignment x, outputs true if x satisfies the constraint, and false otherwise.\nerror: a positive function that works as preferences over invalid assignements. Return 0.0 if the constraint is satisfied, and a strictly positive real otherwise.\n\n\n\n\n\n","category":"type"},{"location":"library/#Constraints.args_length-Tuple{Constraint}","page":"Library","title":"Constraints.args_length","text":"args_length(c::Constraint)\n\nReturn the expected length restriction of the arguments in a constraint c. The value nothing indicates that any strictly positive number of value is accepted.\n\n\n\n\n\n","category":"method"},{"location":"library/#Constraints.concept-Tuple{Constraint}","page":"Library","title":"Constraints.concept","text":"concept(c::Constraint)\n\nReturn the concept (function) of constraint c.     concept(c::Constraint, x...; param = nothing) Apply the concept of c to values x and optionally param.\n\n\n\n\n\n","category":"method"},{"location":"library/#Constraints.error_f-Tuple{Constraint}","page":"Library","title":"Constraints.error_f","text":"error_f(c::Constraint)\n\nReturn the error function of constraint c.     error_f(c::Constraint, x...; param = nothing) Apply the error function of c to values x and optionally param.\n\n\n\n\n\n","category":"method"},{"location":"library/#Constraints.params_length-Tuple{Constraint}","page":"Library","title":"Constraints.params_length","text":"params_length(c::Constraint)\n\nReturn the expected length restriction of the arguments in a constraint c. The value nothing indicates that any strictly positive number of parameters is accepted.\n\n\n\n\n\n","category":"method"},{"location":"","page":"Home","title":"Home","text":"CurrentModule = Constraints","category":"page"},{"location":"#Constraints-for-JuliaConstraints-front-packages","page":"Home","title":"Constraints for JuliaConstraints front packages","text":"","category":"section"}]
}
