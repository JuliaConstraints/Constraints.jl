"""
    icn_all_equal(x; X = zeros(length(x), 3), param=nothing, dom_size)

Composition `icn_all_equal` generated by CompositionalNetworks.jl.
```
icn_all_equal = euclidian ∘ count_positive ∘ sum ∘ [contiguous_vals_minus, count_l_left, count_greater]
```
"""
function icn_all_equal(x; X = zeros(length(x), 3), param = nothing, dom_size)
    CompositionalNetworks.tr_in(
        Tuple([
            CompositionalNetworks.tr_contiguous_vals_minus,
            CompositionalNetworks.tr_count_l_left,
            CompositionalNetworks.tr_count_greater
        ]),
        X,
        x,
        param
    )
    X[:, 1] .= 1:length(x) .|> (i -> CompositionalNetworks.ar_sum(@view X[i, 1:3]))
    return CompositionalNetworks.ag_count_positive(@view X[:, 1]) |>
           (y -> CompositionalNetworks.co_euclidian(y; param, dom_size, nvars = length(x)))
end
